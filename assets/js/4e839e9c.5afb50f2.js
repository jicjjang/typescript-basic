"use strict";(self.webpackChunktypescript_basic=self.webpackChunktypescript_basic||[]).push([[56],{5788:(e,t,n)=>{n.d(t,{Iu:()=>p,yg:()=>g});var r=n(1504);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},308:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(5072),a=(n(1504),n(5788));const i={sidebar_position:2,title:"namespace",description:"namespace"},o=void 0,s={unversionedId:"modularization/namespace",id:"modularization/namespace",title:"namespace",description:"namespace",source:"@site/docs/modularization/namespace.md",sourceDirName:"modularization",slug:"/modularization/namespace",permalink:"/typescript-basic/docs/modularization/namespace",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"namespace",description:"namespace"},sidebar:"docsSidebar",previous:{title:"module",permalink:"/typescript-basic/docs/modularization/module"},next:{title:"\ud2b8\ub9ac\ud50c \uc2ac\ub798\uc2dc \uc9c0\uc2dc\uc5b4 (Triple-slash Directives)",permalink:"/typescript-basic/docs/modularization/triple-slash-directives"}},l={},c=[{value:"\ub2e8\uc77c \ud30c\uc77c namespace",id:"\ub2e8\uc77c-\ud30c\uc77c-namespace",level:2}],p={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.c)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("head",null,(0,a.yg)("meta",{name:"title",content:"Advanced \ud559\uc2b5 | \uae30\ucd08\ubd80\ud130 \uc2dc\uc791\ud558\ub294 \ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8","data-rh":"true"}),(0,a.yg)("meta",{name:"description",content:"namespace","data-rh":"true"}),(0,a.yg)("meta",{property:"og:title",content:"Advanced \ud559\uc2b5 | \uae30\ucd08\ubd80\ud130 \uc2dc\uc791\ud558\ub294 \ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8","data-rh":"true"}),(0,a.yg)("meta",{property:"og:description",content:"namespace","data-rh":"true"})),(0,a.yg)("p",null,"\uc544\ub798\uc640 \uac19\uc740 \ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8\uac00 \uc801\uc6a9\ub41c \ucf54\ub4dc\uac00 \uc788\ub2e4\uace0 \uc608\ub97c \ub4e4\uc5b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},'interface StringValidator {\n  isAcceptable(s: string): boolean;\n}\n\nlet lettersRegexp = /^[A-Za-z]+$/;\nlet numberRegexp = /^[0-9]+$/;\n\nclass LettersOnlyValidator implements StringValidator {\n  isAcceptable(s: string) {\n    return lettersRegexp.test(s);\n  }\n}\n\nclass ZipCodeValidator implements StringValidator {\n  isAcceptable(s: string) {\n    return s.length === 5 && numberRegexp.test(s);\n  }\n}\n\n// \uc2dc\ub3c4\ud574 \ubcfc \uc0d8\ud50c\nlet strings = ["Hello", "98052", "101"];\n// \uc0ac\uc6a9\ud560 \uac80\uc0ac\uae30\nlet validators: { [s: string]: StringValidator } = {};\n\nvalidators["ZIP code"] = new ZipCodeValidator();\nvalidators["Letters only"] = new LettersOnlyValidator();\n\n// \uac01 \ubb38\uc790\uc5f4\uc774 \uac01 \uac80\uc0ac\uae30\ub97c \ud1b5\uacfc\ud588\ub294\uc9c0 \ud45c\uc2dc\nfor (let s of strings) {\n  for (let name in validators) {\n    let isMatch = validators[name].isAcceptable(s);\n    console.log(`\'${s}\' ${isMatch ? "matches" : "does not match"} \'${name}\'`);\n  }\n}\n')),(0,a.yg)("h2",{id:"\ub2e8\uc77c-\ud30c\uc77c-namespace"},"\ub2e8\uc77c \ud30c\uc77c namespace"),(0,a.yg)("p",null,"\uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\ub294 \uc5c6\ub294 namespace \ub2e8\uc704\ub97c \ub9cc\ub4e4\uc5b4 \uacf5\ud1b5\ub41c \uc5ed\ud560\uc744 \ud558\ub294 Validator\ub4e4\uc744 \ubaa8\uc544\uc8fc\ub294 \ubaa8\ub4c8\uc744 \ub9cc\ub4ed\ub2c8\ub2e4."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},'namespace Validation {\n  export interface StringValidator {\n    isAcceptable(s: string): boolean;\n  }\n\n  const lettersRegexp = /^[A-Za-z]+$/;\n  const numberRegexp = /^[0-9]+$/;\n\n  export class LettersOnlyValidator implements StringValidator {\n    isAcceptable(s: string) {\n      return lettersRegexp.test(s);\n    }\n  }\n\n  export class ZipCodeValidator implements StringValidator {\n    isAcceptable(s: string) {\n      return s.length === 5 && numberRegexp.test(s);\n    }\n  }\n}\n\n// \uc2dc\ub3c4\ud574 \ubcfc \uc0d8\ud50c\nlet strings = ["Hello", "98052", "101"];\n// \uc0ac\uc6a9\ud560 \uac80\uc0ac\uae30\nlet validators: { [s: string]: Validation.StringValidator } = {};\n\nvalidators["ZIP code"] = new Validation.ZipCodeValidator();\nvalidators["Letters only"] = new Validation.LettersOnlyValidator();\n\n// \uac01 \ubb38\uc790\uc5f4\uc774 \uac01 \uac80\uc0ac\uae30\ub97c \ud1b5\uacfc\ud588\ub294\uc9c0 \ud45c\uc2dc\nfor (let s of strings) {\n  for (let name in validators) {\n    console.log(\n      `\'${s}\' ${\n        validators[name].isAcceptable(s) ? "matches" : "does not match"\n      } \'${name}\'`,\n    );\n  }\n}\n')),(0,a.yg)("p",null,"namespace \ub0b4\uc5d0\uc11c export\ud558\ub294 \ud568\uc218\uc774\ub098 \ubcc0\uc218\ub294 \uc678\ubd80\uc5d0\uc11c\ub3c4 Validation\uc744 \ud1b5\ud654 \uc811\uadfc\uc774 \uac00\ub2a5\ud558\uc9c0\ub9cc, export\ud558\uc9c0 \uc54a\uc740 \ud568\uc218, \ubcc0\uc218\ub294 \uc678\ubd80\uc5d0\uc11c \uc811\uadfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."),(0,a.yg)("hr",null),(0,a.yg)("p",null,"\uac10\uc0ac\ud569\ub2c8\ub2e4."))}m.isMDXComponent=!0}}]);